// Fill out your copyright notice in the Description page of Project Settings.

#pragma once
#include "NativeGameplayTags.h"

namespace BaseGameplayTags
{
#pragma region InputTags

	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Look);

	//Movement
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Move);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Dodge);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_QuickStanding);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Jump);

	//Attack
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Attack_Weapon_Normal);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Attack_Weapon_Special);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Attack_Weapon_Jump);

	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Attack_Psych_Normal);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Attack_Psych_Special);

	//Targeting (LockOn)
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Targeting_Toggle);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Targeting_Change);

	//Item
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Item_Use);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Item_Change);

	//SAS
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_SAS_First);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_SAS_Second);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_SAS_Third);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_SAS_Fourth);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_SAS_Cancel);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_SAS_Change);

	//TagAttack
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_TagAttack_First);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_TagAttack_Second);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_TagAttack_Third);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_TagAttack_Fourth);

	//ETC
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_AssaultVision);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_BrainCrush);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Revive);


	// History
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_History_Move_Vertical);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_History_Move_Vertical_Forward);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_History_Move_Vertical_Backward);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_History_Move_Horizontal);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_History_Move_Horizontal_Left);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_History_Move_Horizontal_Right);

	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_History_Jump);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_History_Targeting);

#pragma endregion

#pragma region Player

	// Ability - Attack
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Ground_Weapon);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Ground_Weapon_Fire);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Ground_Psych);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Ground_Charge);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Ground_Charge_Fire);

	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Aerial_Weapon);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Aerial_Weapon_Fire);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Aerial_Psych);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Aerial_CutDown);

	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Special_Psych);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Ground_Backstep);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Aerial_Backstep);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Ground_DashAttack);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Aerial_DashAttack);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Ground_ComboDashAttack);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Aerial_ComboDashAttack);

	
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Ground_Somersault);

	// Ability - Move
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Move_Dash);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Move_Dodge);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Move_Jump);

	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_BrainCrush);

	// Ability - JustDodge
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_JustDodge_Ground_Weapon);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_JustDodge_Ground_Psych);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_JustDodge_Aerial_Weapon);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_JustDodge_Aerial_Psych);


	// Status
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_SAS_Accel);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_SAS_Elemental_Fire);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_SAS_Elemental_Electric);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_SAS_Stealth);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_SAS_Clone);

	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Move_Run);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Move_Dash);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Move_Dodge);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Move_Dodge_Instant);
	
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Charging);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_ChargeReady);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_ComboDashAttack);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Gimmick);
	

	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Move_Aerial);

	// Cooldown
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Cooldown_Item_Heal);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Cooldown_Item_SAS_Recover);

	// Weapon
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Weapon_Kasane_Wp0);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Weapon_Kasane_Wp1);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Weapon_Kasane_Wp2);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Weapon_Kasane_Wp3);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Weapon_Kasane_Wp4);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Weapon_Kasane_Wp5);
	

#pragma endregion

#pragma region Unlock

	//Unlock - Player
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Unlock_DoubleJump);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Unlock_Aerial_Dash);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Unlock_Aerial_DoubleDash);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Unlock_GroundCombo_Third);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Unlock_GroundCombo_Fourth);

#pragma endregion


#pragma region Shared

	// Shared - Ability
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Ability_Elemental_Fire);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Ability_Elemental_Electric);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Ability_Elemental_Water);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Ability_Elemental_Oil);

	
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Ability_SpawnWeapon);
	
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Ability_Dead);

	


	// Shared - Event
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_Hit_Normal);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_Hit_Critical);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_Hit_KnockDown);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_Combo);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_Charge_Cancel);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_Charge);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_Gimmick_CanAttack);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_Gimmick_CannotAttack);
	
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_Charge_Confirm);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_ThrowProjectile);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_Grounded);
	


	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_HitReact_Normal);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_HitReact_Critical);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_HitReact_KnockDown);


	// Shared State
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_CanAttack);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_CanMove);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_Direct);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_State_Down);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_State_Dead);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_State_Invincible);
	


	// Set By Caller
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_SetByCaller_BaseDamage);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_SetByCaller_BasePower);

#pragma endregion


#pragma region Fellow Character
	// Ability
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Fellow_Ability_Attack_Normal);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Fellow_Ability_Attack_Special);
	
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Fellow_Ability_Startup_SpawnWeapon);

	
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Fellow_Ability_Move_Dodge);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Fellow_Ability_Move_Wakeup);


	// State
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Fellow_State_LockOnTarget);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Fellow_State_PlayerFellow);
	
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Fellow_State_EquippingWeapon);
	
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Fellow_State_Attacking);


	// Weapon
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Fellow_Weapon_Arashi);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Fellow_Weapon_Hanabi);
	

	



#pragma endregion

#pragma region Enemy
	// Boss
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Boss_Ability_Attack_WaterBall);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Boss_Ability_Attack_MeleeAttack);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Boss_Ability_Attack_Jump);

	
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Boss_Ability_Move_BackRun);

	
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Boss_Ability_HitReact_SequenceHit);

	
	
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Boss_Ability_JumpAble);
	
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Boss_Weapon_Boss);


	// Boss State
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Boss_State_SequenceAble);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Boss_State_2Phase);

	

	// CommonEnemy
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Common_Ability_Attack_Melee);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Common_Ability_Attack_Ranged);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Common_Ability_threat);
	
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Common_Ability_Status_Dead);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Common_Ability_Status_down);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Common_Ability_Status_BCChance);

	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Common_Ability_Spawn_Core);



	//Weapon
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Common_Weapon_em0400);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Common_Weapon_em0500);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Common_Weapon_em0700);


	// Enemy Event
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Event_SpawnProjectile);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Event_SpawnCore);


	// State
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_State_Dead);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_State_Down);
	SCARLETNEXUS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_State_BCChance);
	
	
#pragma endregion
	
}